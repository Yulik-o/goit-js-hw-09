{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAChCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAE3CF,EAAOM,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAER,IAAIC,EAAQC,OAAOP,EAAWQ,OAC1BC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OAEhC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUxC,OARkB,IAAIC,SAAQ,SAACC,EAASC,GACxCC,YAAW,WACJN,EACHI,EAAQ,CAAEN,WAAUC,UAEtBM,EAAO,CAAEP,WAAUC,S,GAClBA,E,IAKH,IAAK,IAAIQ,EAAY,EAAGA,EAAYX,EAAQW,GAAa,EACvDV,EAAcU,EAAY,EAAGf,GAC5BgB,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAEvEe,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAErEP,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\nlet delay = Number(inputDelay.value);\nlet step = Number(inputStep.value);\nlet amount = Number(inputAmount.value);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\nsetTimeout(() => {\n   if (shouldResolve) {\n    resolve({ position, delay })\n  } else \n  reject({ position, delay })\n}, delay)\n  })\nreturn promise; \n}\n\nfor (let promiseId = 0; promiseId < amount; promiseId += 1) {\n  createPromise(promiseId + 1, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delay = delay + step\n}\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","event","preventDefault","delay1","Number","value","step","amount","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","promiseId","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9ed3c62b.js.map"}